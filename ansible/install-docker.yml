---
- name: Install Docker on Ubuntu
  hosts: yc_vm
  become: yes

  tasks:
    - name: Ensure required dependencies are installed
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - lsb-release
          - gnupg
        state: latest
        update_cache: true

    - name: Create keyring directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and add Docker GPG key
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        dest: "/etc/apt/keyrings/docker.asc"
        mode: '0644'
        force: true

    - name: Get system architecture
      ansible.builtin.command: dpkg --print-architecture
      register: deb_architecture
      changed_when: false

    - name: Get Ubuntu release codename
      ansible.builtin.shell: ". /etc/os-release && echo ${UBUNTU_CODENAME:-$VERSION_CODENAME}"
      register: ubuntu_codename
      changed_when: false

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ubuntu_codename.stdout }} stable"
        state: present
        filename: docker

    - name: Update apt package index after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Run hello-world container
      command: docker run hello-world
      register: hello_output
      changed_when: false

    - name: Show hello-world output
      debug:
        msg: "{{ hello_output.stdout }}"

